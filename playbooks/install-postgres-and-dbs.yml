---
- name: install postgrsql and dbs
  hosts: rs-dba*
  gather_facts: false
  vars_files:
    - "../vars/index.yml"
  remote_user: "{{ username }}"
  become: true
  strategy: free
  vars:
    postgresql_version: "14"
    postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
    postgresql_data_dir: "/var/lib/postgresql/{{ postgresql_version }}/main"
    ansible_ssh_pipelining: true
  tasks:
    - name: Install postgres packages
      ansible.builtin.apt:
        name:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
        state: present
      become: true

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ username }}{{ item }}"
      become_user: postgres
      loop: "{{ database_to_make }}"

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ username }}"
        password: "{{ username }}"
      become_user: postgres

    # - name: Ensure we have access from the new user
    #   postgresql_privs:
    #     db: "{{ username }}{{ item }}"
    #     role: "{{ username }}"
    #     objs: ALL_IN_SCHEMA
    #     privs: SELECT,INSERT,UPDATE,DELETE
    #   become: yes
    #   become_user: postgres
    #   loop: "{{ database_to_make }}"

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ item }}"
        roles: "{{ username }}"
        privs: all
      become_user: postgres
      loop: "{{ database_to_make }}"

    - name: Configure PostgreSQL. Set listen_addresses.
      lineinfile:
        dest=/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        regexp="listen_addresses =" line="listen_addresses = '*'" state=present
      become_user: postgres
      notify:
        - restart postgresql
      tags:
        - postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        contype: host
        users: "{{ username }}"
        source: "{{ hetzner_network_ip_range }}"
        databases: all
        method: md5
        create: true
      become_user: postgres
      notify:
        - restart postgresql

  handlers:
    - name: restart postgresql
      service: name=postgresql state=restarted
