---
- name: Install postgrsql and dbs
  hosts: data*
  gather_facts: false
  vars_files:
    - "../vars/index.yml"
    - "../vars/sensitive-deploy.yml"
    - "../vars/sensitive-apps.yml"
  remote_user: "{{ unix_user }}"
  become: true
  vars:
    postgresql_version: "14"
    postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
    postgresql_data_dir: "/var/lib/postgresql/{{ postgresql_version }}/main"
    ansible_ssh_pipelining: true
  tasks:
    - name: Install postgres packages
      ansible.builtin.apt:
        name:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
        state: present
      become: true

    - name: "Create app database"
      community.postgresql.postgresql_db:
        state: present
        name: "{{ item }}"
      become_user: postgres
      loop: "{{ database_to_make }}"

    - name: "Create users db"
      community.postgresql.postgresql_db:
        state: present
        name: "{{ postgres_user }}"
      become_user: postgres

    - name: "Create db user"
      community.postgresql.postgresql_user:
        state: present
        name: "{{ postgres_user }}"
        password: "{{ postgres_pass }}"
      become_user: postgres

    - name: "Grant db user access to app db"
      community.postgresql.postgresql_privs:
        type: database
        database: "{{ item }}"
        roles: "{{ postgres_user }}"
        privs: all
      become_user: postgres
      loop: "{{ database_to_make }}"

    - name: "Grant db user access to users db"
      community.postgresql.postgresql_privs:
        type: database
        database: "{{ postgres_user }}"
        roles: "{{ postgres_user }}"
        privs: all
      become_user: postgres

    - name: Configure PostgreSQL. Set listen_addresses.
      ansible.builtin.lineinfile:
        dest: /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
        regexp: "listen_addresses ="
        line: "listen_addresses = '*'"
        state: present
      become_user: postgres
      notify:
        - Restart postgresql
      tags:
        - postgres

    - name: "Allow md5 connection for the db user"
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
        contype: host
        users: "{{ postgres_user }}"
        source: "{{ hetzner_network_ip_range }}"
        databases: all
        method: md5
        create: true
      become_user: postgres
      notify:
        - Restart postgresql

  handlers:
    - name: Restart postgresql
      ansible.builtin.service:
        name: postgresql
        state: restarted
