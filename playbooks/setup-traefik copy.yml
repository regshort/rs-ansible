---
- name: Setup traefik
  hosts: manager*
  gather_facts: false
  vars_files:
    - "../vars/index.yml"
  remote_user: "{{ username }}"

  tasks:
  # first copy local config to /etc/traefik/traefik.yml on manager
  # copy and run traefik-stack.yml docker compose
  # declare the current node manager as main certificates host, required in order to respect above deploy constraint
  # docker node update --label-add traefik-public.certificates=true manager-01

  # # generate your main admin password hash for any admin HTTP basic auth access into specific environment variable
  # export HASHED_PASSWORD=$(openssl passwd -apr1 aNyR4nd0mP@ssw0rd)

  # # deploy our 1st stack and cross the fingers...
  # docker stack deploy -c traefik-stack.yml traefik

  # # check status of the service, it should have 1 replica
  # docker service ls

  # # check logs for detail or any errors
  # docker service logs traefik_traefik
    - name: Rnsures etc/traefik exists
      ansible.builtin.file:
        path: "/etc/traefik"
        state: directory
      become: true

    - name: Copy traefik config
      ansible.builtin.copy:
        src: "../apps/traefik/traefik.yml"
        dest: /etc/traefik/traefik.yml
        owner: "{{ username }}"
        mode: '0644'
      become: true

    - name: Copy traefik stack config
      ansible.builtin.copy:
        src: "../apps/traefik/traefik-stack.yml"
        dest: ~/traefik-stack.yml
        owner: "{{ username }}"
        mode: '0644'

    - name: Add tag to manager
      ansible.builtin.command:
        cmd: docker node update --label-add traefik-public.certificates=true {{ inventory_hostname.split('-')[:2] | join('-') }}
      become: true
      delegate_to: "{{ groups['all'] | select('match', '^manager') | map('extract', hostvars, ['ipv4']) | list | first }}"

    - name: Generate encrypted password
      shell: openssl passwd -apr1 only4you
      register: encrypted_password

    - name: Start traefik
      ansible.builtin.command:
        cmd: docker stack deploy -c ~/traefik-stack.yml traefik
      environment:
        HASHED_PASSWORD: "{{ encrypted_password.stdout }}"
